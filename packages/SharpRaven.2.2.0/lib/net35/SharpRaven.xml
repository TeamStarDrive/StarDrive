<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpRaven</name>
    </assembly>
    <members>
        <member name="T:SharpRaven.Data.BreadcrumbLevel">
            <summary>
            This defines the level of the event. If not provided it defaults to info which is the middle level. In the order of priority from highest to lowest the levels are critical, error, warning, info and debug. Levels are used in the UI to emphasize and deemphasize the crumb.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.BreadcrumbType">
            <summary>
            Indicates the descriptions of individual breadcrumb types, and what their data properties look like.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.BreadcrumbType.Navigation">
            <summary>
            Describes a navigation breadcrumb. A navigation event can be a URL change in a web application, or a UI transition in a mobile or desktop application, etc.
            Its data property has the following sub-properties:
            from
            A string representing the original application state / location.
            to
            A string representing the new application state / location.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.BreadcrumbType.Http">
            <summary>
            Describes an HTTP request breadcrumb. This represents an HTTP request transmitted from your application. This could be an AJAX request from a web application, or a server-to-server HTTP request to an API service provider, etc.
            
            Its data property has the following sub-properties:
            
            url
            The request URL.
            method
            The HTTP request method.
            status_code
            The HTTP status code of the response.
            reason
            A text that describes the status code.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.Breadcrumb">
            <summary>
            Breadcrumb trail.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.DefaultHttpRequestBodyConverter">
            <summary>
            The default HTTP media type converter; just returns the HTTP request body as a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.IHttpRequestBodyConverter">
            <summary>
            HTTP media type interface for converting the HTTP body of a request to a structured type.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.IHttpRequestBodyConverter.Matches(System.String)">
            <summary>
            Checks whether the specified <paramref name="contentType"/> can be converted by this
            <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation or not.
            </summary>
            <param name="contentType">The media type to match.</param>
            <returns>
            Returns <c>true</c> if the <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation can convert
            the specified <paramref name="contentType"/> cref="contentType"/&gt;; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.IHttpRequestBodyConverter.TryConvert(System.Web.HttpContext,System.Object@)">
            <summary>
            Tries to convert the HTTP request body of the specified <paramref name="httpContext"/> to
            a structured type.
            </summary>
            <param name="httpContext">The HTTP context containing the request body to convert.</param>
            <param name="converted">
            The converted, structured type for the specified <paramref name="httpContext"/>'s request
            body or <c>null</c> if the <paramref name="httpContext"/> is null, or the somehow conversion
            fails.
            </param>
            <returns>
            <c>true</c> if the conversion succeeds; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.DefaultHttpRequestBodyConverter.Matches(System.String)">
            <summary>
            Checks whether the specified <paramref name="contentType"/> can be converted by this
            <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation or not.
            </summary>
            <param name="contentType">The media type to match.</param>
            <returns>
            Returns <c>true</c> if the <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation can convert
            the specified <paramref name="contentType"/> cref="contentType"/&gt;; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.DefaultHttpRequestBodyConverter.TryConvert(System.Web.HttpContext,System.Object@)">
            <summary>
            Tries to convert the HTTP request body of the specified <paramref name="httpContext"/> to
            a structured type.
            </summary>
            <param name="httpContext">The HTTP context containing the request body to convert.</param>
            <param name="converted">
            The converted, structured type for the specified <paramref name="httpContext"/>'s request
            body or <c>null</c> if the <paramref name="httpContext"/> is null, or the somehow conversion
            fails.
            </param>
            <returns>
            <c>true</c> if the conversion succeeds; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.ExceptionData">
            <summary>
            Data class for containing <see cref="P:System.Exception.Data"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.ExceptionData.#ctor(System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:SharpRaven.Data.ExceptionData"/> class.</summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:SharpRaven.Data.ExceptionData.ExceptionType">
            <summary>Gets the type of the exception.</summary>
            <value>The type of the exception.</value>
        </member>
        <member name="T:SharpRaven.Data.HttpRequestBodyConverter">
            <summary>
            Static utility class for converting an HTTP request body through implementations of
            the <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> interface.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.HttpRequestBodyConverter.Convert(System.Web.HttpContext)">
            <summary>
            Converts the HTTP request body of the specified <paramref name="httpContext"/> to
            a structured type.
            </summary>
            <param name="httpContext">The HTTP context containing the request body to convert.</param>
            <returns>
            A structured type for the specified <paramref name="httpContext"/>'s request body
            or <c>null</c> if the <paramref name="httpContext"/> is null, or the somehow conversion fails.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.FormHttpRequestBodyConverter">
            <summary>
            HTTP media type converter for HTML forms.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.FormHttpRequestBodyConverter.Matches(System.String)">
            <summary>
            Checks whether the specified <paramref name="contentType"/> can be converted by this
            <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation or not.
            </summary>
            <param name="contentType">The media type to match.</param>
            <returns>
            Returns <c>true</c> if the <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation can convert
            the specified <paramref name="contentType"/> cref="contentType"/&gt;; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.FormHttpRequestBodyConverter.TryConvert(System.Web.HttpContext,System.Object@)">
            <summary>
            Tries to convert the HTTP request body of the specified <paramref name="httpContext"/> to
            a structured type.
            </summary>
            <param name="httpContext">The HTTP context containing the request body to convert.</param>
            <param name="converted">
            The converted, structured type for the specified <paramref name="httpContext"/>'s request
            body or <c>null</c> if the <paramref name="httpContext"/> is null, or the somehow conversion
            fails.
            </param>
            <returns>
            <c>true</c> if the conversion succeeds; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.ISentryRequestFactory">
            <summary>
            Factory interface for creating 
            <see cref="T:SharpRaven.Data.SentryRequest"/>s. To simply adjust the values of a
            request object before it is sent to Sentry, inherit 
            <see cref="T:SharpRaven.Data.SentryRequestFactory"/> and override
            its 
            <see cref="M:SharpRaven.Data.SentryRequestFactory.OnCreate(SharpRaven.Data.SentryRequest)"/> method.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.ISentryRequestFactory.Create">
            <summary>
            Creates a new instance of <see cref="T:SharpRaven.Data.SentryRequest"/>
            for the current packet.
            </summary>
            <returns>A new instance of <see cref="T:SharpRaven.Data.SentryRequest"/> with information relating to the current HTTP request</returns>
        </member>
        <member name="T:SharpRaven.Data.ISentryUserFactory">
            <summary>
            Factory interface for creating 
            <see cref="T:SharpRaven.Data.SentryUser"/>s. To simply adjust the values of a
            user object before it is sent to Sentry, inherit 
            <see cref="T:SharpRaven.Data.SentryUserFactory"/> and override
            its 
            <see cref="M:SharpRaven.Data.SentryUserFactory.OnCreate(SharpRaven.Data.SentryUser)"/> method.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.ISentryUserFactory.Create">
            <summary>
            Creates a new instance of <see cref="T:SharpRaven.Data.SentryUser"/>
            for the current packet.
            </summary>
            <returns>A new instance of <see cref="T:SharpRaven.Data.SentryUser"/> with information relating to the current application's user</returns>
        </member>
        <member name="T:SharpRaven.Data.ISentryRequest">
            <summary>
            Interface for the <c>request</c> object.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Cookies">
            <summary>
            Gets or sets the cookies.
            </summary>
            <value>
            The cookies.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Data">
            <summary>
            The data variable should only contain the request body (not the query string). It can either be a dictionary (for standard HTTP requests) or a raw request body.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Environment">
            <summary>
            The env variable is a compounded dictionary of HTTP headers as well as environment information passed from the webserver.
            Sentry will explicitly look for REMOTE_ADDR in env for things which require an IP address.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Method">
            <summary>
            Gets or sets the method of the HTTP request.
            </summary>
            <value>
            The method of the HTTP request.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.QueryString">
            <summary>
            Gets or sets the query string.
            </summary>
            <value>
            The query string.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ISentryRequest.Url">
            <summary>
            Gets or sets the URL of the HTTP request.
            </summary>
            <value>
            The URL of the HTTP request.
            </value>
        </member>
        <member name="T:SharpRaven.Data.JsonHttpRequestBodyConverter">
            <summary>
            HTTP media type converter for JSON.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.JsonHttpRequestBodyConverter.Matches(System.String)">
            <summary>
            Checks whether the specified <paramref name="contentType"/> can be converted by this
            <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation or not.
            </summary>
            <param name="contentType">The media type to match.</param>
            <returns>
            Returns <c>true</c> if the <see cref="T:SharpRaven.Data.IHttpRequestBodyConverter"/> implementation can convert
            the specified <paramref name="contentType"/> cref="contentType"/&gt;; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonHttpRequestBodyConverter.TryConvert(System.Web.HttpContext,System.Object@)">
            <summary>
            Tries to convert the HTTP request body of the specified <paramref name="httpContext"/> to
            a structured type.
            </summary>
            <param name="httpContext">The HTTP context containing the request body to convert.</param>
            <param name="converted">
            The converted, structured type for the specified <paramref name="httpContext"/>'s request
            body or <c>null</c> if the <paramref name="httpContext"/> is null, or the somehow conversion
            fails.
            </param>
            <returns>
            <c>true</c> if the conversion succeeds; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.JsonPacketFactory">
            <summary>
            A default implementation of <see cref="T:SharpRaven.Data.IJsonPacketFactory"/>. Override the <see cref="M:SharpRaven.Data.JsonPacketFactory.OnCreate(SharpRaven.Data.JsonPacket)"/>
            method to adjust the values of the <see cref="T:SharpRaven.Data.JsonPacket"/> before it is sent to Sentry.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.IJsonPacketFactory">
            <summary>
            Factory interface for creating <see cref="T:SharpRaven.Data.JsonPacket"/>s.
            To simply adjust the values of a packet before it is sent to Sentry, inherit
            <see cref="T:SharpRaven.Data.JsonPacketFactory"/> and override its <see cref="M:SharpRaven.Data.JsonPacketFactory.OnCreate(SharpRaven.Data.JsonPacket)"/> method.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.IJsonPacketFactory.Create(System.String,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Creates a new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="message">The message to capture.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="message"/>. Default <see cref="F:SharpRaven.Data.ErrorLevel.Info"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="message"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="message"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified <paramref name="project"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.IJsonPacketFactory.Create(System.String,System.Exception,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Creates a new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the given <paramref name="exception"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="message">The optional message to capture. Default: <see cref="P:System.Exception.Message"/>.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="exception"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="exception"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="exception"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the given <paramref name="exception"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.IJsonPacketFactory.Create(System.String,SharpRaven.Data.SentryEvent)">
            <summary>
            Creates a new instance of  <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the  given <paramref name="event"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="event">The event to capture.</param>
            <returns>
            A new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the given <paramref name="event"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonPacketFactory.Create(System.String,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Creates a new instance of
            <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="message">The message to capture.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="message"/>. Default <see cref="F:SharpRaven.Data.ErrorLevel.Info"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="message"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="message"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified <paramref name="project"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonPacketFactory.Create(System.String,System.Exception,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Creates a new instance of
            <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the
            given
            <paramref name="exception"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="message">The optional message to capture. Default: <see cref="P:System.Exception.Message"/>.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="exception"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="exception"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="exception"/>.</param>
            <returns>
            A new instance of
            <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the
            given
            <paramref name="exception"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonPacketFactory.Create(System.String,SharpRaven.Data.SentryEvent)">
            <summary>
            Creates a new instance of  <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the  given <paramref name="event"/>.
            </summary>
            <param name="project">The project.</param>
            <param name="event">The event to capture.</param>
            <returns>
            A new instance of <see cref="T:SharpRaven.Data.JsonPacket"/> for the specified
            <paramref name="project"/>, with the given <paramref name="event"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonPacketFactory.OnCreate(SharpRaven.Data.JsonPacket)">
            <summary>
            Called when the <see cref="T:SharpRaven.Data.JsonPacket"/> has been created. Can be overridden to
            adjust the values of the <paramref name="jsonPacket"/> before it is sent to Sentry.
            </summary>
            <param name="jsonPacket">The json packet.</param>
            <returns>
            The <see cref="T:SharpRaven.Data.JsonPacket"/>.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.ErrorLevel">
            <summary>
            Indicates the severity of the error.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.ErrorLevel.Fatal">
            <summary>
            The error is fatal and more severe than a captured exception or regular <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>. Errors at this severity
            will show up as dark red in the Sentry Stream.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.ErrorLevel.Error">
            <summary>
            The error is of the same severity as a captured exception. Errors at this severity
            will show up as bright red in the Sentry Stream.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.ErrorLevel.Warning">
            <summary>
            The error is less severe than an a regular <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>. Errors at this severity will show
            up as orange in the Sentry Stream.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.ErrorLevel.Info">
            <summary>
            The error is less severe than a <see cref="F:SharpRaven.Data.ErrorLevel.Warning"/> and is probably expected. Errors at this severity
            will show up as blue in the Sentry Stream.
            </summary>
        </member>
        <member name="F:SharpRaven.Data.ErrorLevel.Debug">
            <summary>
            The error is less even severe than an <see cref="F:SharpRaven.Data.ErrorLevel.Info"/> and is just captured for debug purposes. Errors
            at this severity will show up as grey in the Sentry Stream.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.ExceptionFrame">
            <summary>
            Represents Sentry's version of <see cref="T:System.Diagnostics.StackFrame"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.ExceptionFrame.#ctor(System.Diagnostics.StackFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.ExceptionFrame"/> class.
            </summary>
            <param name="frame">The <see cref="T:System.Diagnostics.StackFrame"/>.</param>
        </member>
        <member name="M:SharpRaven.Data.ExceptionFrame.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.ExceptionFrame.DemangleAsyncFunctionName">
            <summary>
            Clean up function and module names produced from `async` state machine calls.
            </summary>
            <para>
            When the Microsoft cs.exe compiler compiles some modern C# features,
            such as async/await calls, it can create synthetic function names that
            do not match the function names in the original source code. Here we
            reverse some of these transformations, so that the function and module
            names that appears in the Sentry UI will match the function and module
            names in the original source-code.
            </para>
        </member>
        <member name="M:SharpRaven.Data.ExceptionFrame.DemangleAnonymousFunction">
            <summary>
            Clean up function names for anonymous lambda calls.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.AbsolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.ColumnNumber">
            <summary>
            Gets or sets the column number.
            </summary>
            <value>
            The column number.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
            <value>
            The filename.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.Function">
            <summary>
            Gets or sets the function.
            </summary>
            <value>
            The function.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.InApp">
            <summary>
            Signifies whether this frame is related to the execution of the relevant code in this
            stacktrace. For example, the frames that might power the framework’s webserver of your
            app are probably not relevant, however calls to the framework’s library once you start
            handling code likely are.
            </summary>
            <value>
            <c>true</c> unless the StackFrame is part of the System namespace.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
            <value>
            The line number.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.Module">
            <summary>
            Gets or sets the module.
            </summary>
            <value>
            The module.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.PostContext">
            <summary>
            Gets or sets the post context.
            </summary>
            <value>
            The post context.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.PreContext">
            <summary>
            Gets or sets the preference context.
            </summary>
            <value>
            The preference context.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:SharpRaven.Data.ExceptionFrame.Vars">
            <summary>
            Gets or sets the vars.
            </summary>
            <value>
            The vars.
            </value>
        </member>
        <member name="T:SharpRaven.Data.RequestData">
            <summary>
            Contains <see cref="T:System.String"/> representations of a <see cref="T:SharpRaven.Data.JsonPacket"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.RequestData.#ctor(SharpRaven.Data.Requester)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.RequestData"/> class.
            </summary>
            <param name="requester">The <see cref="T:SharpRaven.Data.Requester"/> in which the request data will be used.</param>
        </member>
        <member name="M:SharpRaven.Data.RequestData.ToString">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the <see cref="T:SharpRaven.Data.RequestData"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representation of the <see cref="T:SharpRaven.Data.RequestData"/>.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.RequestData.Raw">
            <summary>
            Gets the <see cref="T:SharpRaven.Data.JsonPacket"/> converted to a <see cref="T:System.String"/> before
            being scrubbed by <see cref="T:SharpRaven.Logging.IScrubber"/>.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.RequestData.Scrubbed">
            <summary>
            Gets the <see cref="T:SharpRaven.Data.JsonPacket"/> converted to a <see cref="T:System.String"/> after
            being scrubbed by <see cref="M:IRavenClient.LogScubber"/>. If <see cref="M:IRavenClient.LogScubber"/>
            is null, <see cref="P:SharpRaven.Data.RequestData.Raw"/> will be returned.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.Requester">
            <summary>
            The class responsible for performing the HTTP request to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.Requester.#ctor(SharpRaven.Data.JsonPacket,SharpRaven.RavenClient)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.Requester"/> class.
            </summary>
            <param name="packet">The <see cref="T:SharpRaven.Data.JsonPacket"/> to initialize with.</param>
            <param name="ravenClient">The <see cref="T:SharpRaven.RavenClient"/> to initialize with.</param>
        </member>
        <member name="M:SharpRaven.Data.Requester.Request">
            <summary>
            Executes the HTTP request to Sentry.
            </summary>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured JSON packet, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.Requester.Client">
            <summary>
            Gets the <see cref="T:SharpRaven.IRavenClient"/>.
            </summary> 
        </member>
        <member name="P:SharpRaven.Data.Requester.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpRaven.Data.Requester.Packet">
            <summary>
            Gets the <see cref="T:SharpRaven.Data.JsonPacket"/> being sent to Sentry.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.Requester.WebRequest">
            <summary>
            Gets the <see cref="T:System.Net.HttpWebRequest"/> instance being used to perform the HTTP request to Sentry.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.SentryEvent">
            <summary>
            Represents an event being captured by <see cref="M:SharpRaven.IRavenClient.Capture(SharpRaven.Data.SentryEvent)"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryEvent.#ctor(System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryEvent"/> class.</summary>
            <param name="exception">The <see cref="P:SharpRaven.Data.SentryEvent.Exception"/> to capture.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryEvent.#ctor(SharpRaven.Data.SentryMessage)">
            <summary>Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryEvent"/> class.</summary>
            <param name="message">The message to capture.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryEvent.#ctor">
            <summary>Prevents a default instance of the <see cref="T:SharpRaven.Data.SentryEvent"/> class from being created.</summary>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Exception">
            <summary>Gets the <see cref="P:SharpRaven.Data.SentryEvent.Exception"/> to capture.</summary>
            <value>The <see cref="P:SharpRaven.Data.SentryEvent.Exception"/> to capture.</value>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Extra">
            <summary>Gets extra metadata to send with the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/>.</summary>
            <value>
            The extra metadata to send with the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/>.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Breadcrumbs">
            <summary>Gets or Sets trail with <see cref="T:SharpRaven.Data.Breadcrumb"/>.</summary>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Fingerprint">
            <summary>
            Gets the custom fingerprint to identify the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/> with.
            </summary>
            <value>
            The custom fingerprint to identify the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/> with.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Level">
            <summary>
            Gets the <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <see name="Exception"/>
            or <see cref="P:SharpRaven.Data.SentryEvent.Message"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.
            </summary>
            <value>
            The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <see name="Exception"/>
            or <see cref="P:SharpRaven.Data.SentryEvent.Message"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Message">
            <summary>Gets the optional message to capture instead of the default <see cref="T:Exception.Message" />.</summary>
            <value>
            The optional message to capture instead of the default <see cref="T:Exception.Message" />.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryEvent.Tags">
            <summary>Gets the tags to annotate the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/> with.</summary>
            <value>
            The tags to annotate the captured <see name="Exception"/> or <see cref="P:SharpRaven.Data.SentryEvent.Message"/> with.
            </value>
        </member>
        <member name="T:SharpRaven.Data.SentryMessage">
            <summary>
            Captures a <see cref="T:System.String"/> message, optionally formatted with arguments,
            as sent to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryMessage.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryMessage"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="parameters">The arguments.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryMessage"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.SentryMessage.op_Implicit(System.String)~SharpRaven.Data.SentryMessage">
            <summary>
            Implicitly converts the <see cref="T:System.String"/> <paramref name="message"/> to a <see cref="T:SharpRaven.Data.SentryMessage"/> object.
            </summary>
            <param name="message">The message.</param>
            <returns>
            The <see cref="T:System.String"/> <paramref name="message"/> implicitly converted to a <see cref="T:SharpRaven.Data.SentryMessage"/> object.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.SentryMessage.op_Implicit(SharpRaven.Data.SentryMessage)~System.String">
            <summary>
            Implicitly converts the <see cref="T:SharpRaven.Data.SentryMessage"/> object to a <see cref="T:System.String"/>.
            </summary>
            <param name="message">The message.</param>
            <returns>
            The <see cref="T:SharpRaven.Data.SentryMessage"/> object implicitly converted to a <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryMessage.Message">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryMessage.Parameters">
            <summary>
            Gets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="T:SharpRaven.Data.SentryException">
            <summary>
            Represents Sentry's version of an <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryException"/> class.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryException.Module">
            <summary>
            The module where the exception happened.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.SentryException.Stacktrace">
            <summary>
            The stacktrace of the exception.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.SentryException.Type">
            <summary>
            The type of exception.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.SentryException.Value">
            <summary>
            The message of the exception.
            </summary>
        </member>
        <member name="T:SharpRaven.Data.SentryRequest">
            <summary>
            The Request information is stored in the Http interface. Two arguments are required: url and method.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryRequest.#ctor">
            <summary>
            Creates a new <see cref="T:SharpRaven.Data.SentryRequest"/> which may be submitted to Sentry to give context specific
            request information for web services.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryRequest.GetRequest(SharpRaven.Data.ISentryRequestFactory)">
            <summary>
            Gets the request.
            </summary>
            <returns>
            If an HTTP contest is available, an instance of <see cref="T:SharpRaven.Data.SentryRequest"/>, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Cookies">
            <summary>
            Gets or sets the cookies.
            </summary>
            <value>
            The cookies.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Data">
            <summary>
            The data variable should only contain the request body (not the query string). It can either be a dictionary (for standard HTTP requests) or a raw request body.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Environment">
            <summary>
            The env variable is a compounded dictionary of HTTP headers as well as environment information passed from the webserver.
            Sentry will explicitly look for REMOTE_ADDR in env for things which require an IP address.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Method">
            <summary>
            Gets or sets the method of the HTTP request.
            </summary>
            <value>
            The method of the HTTP request.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.QueryString">
            <summary>
            Gets or sets the query string.
            </summary>
            <value>
            The query string.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequest.Url">
            <summary>
            Gets or sets the URL of the HTTP request.
            </summary>
            <value>
            The URL of the HTTP request.
            </value>
        </member>
        <member name="T:SharpRaven.Data.SentryUserFactory">
            <summary>
            A default implementation of <see cref="T:SharpRaven.Data.ISentryUserFactory"/>. Override the <see cref="M:SharpRaven.Data.SentryUserFactory.OnCreate(SharpRaven.Data.SentryUser)"/>
            method to adjust the values of the <see cref="T:SharpRaven.Data.SentryUser"/> before it is sent to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryUserFactory.Create">
            <summary>
            Gets the user.
            </summary>
            <returns>
            If an HTTP context is available, an instance of <see cref="T:SharpRaven.Data.SentryUser"/>, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.SentryUserFactory.OnCreate(SharpRaven.Data.SentryUser)">
            <summary>
            Called when the <see cref="T:SharpRaven.Data.SentryUser"/> has been created. Can be overridden to
            adjust the values of the <paramref name="user"/> before it is sent to Sentry.
            </summary>
            <param name="user">The user information.</param>
            <returns>
            The <see cref="T:SharpRaven.Data.SentryUser"/>.
            </returns>
        </member>
        <member name="T:SharpRaven.Data.SentryRequestFactory">
            <summary>
            A default implementation of <see cref="T:SharpRaven.Data.ISentryRequestFactory"/>. Override the <see cref="M:SharpRaven.Data.SentryRequestFactory.OnCreate(SharpRaven.Data.SentryRequest)"/>
            method to adjust the values of the <see cref="T:SharpRaven.Data.SentryRequest"/> before it is sent to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryRequestFactory.Create">
            <summary>
            Creates a new instance of <see cref="T:SharpRaven.Data.SentryRequest"/>
            for the current packet.
            </summary>
            <returns>A new instance of <see cref="T:SharpRaven.Data.SentryRequest"/> with information relating to the current HTTP request</returns>
        </member>
        <member name="M:SharpRaven.Data.SentryRequestFactory.OnCreate(SharpRaven.Data.SentryRequest)">
            <summary>
            Called when the <see cref="T:SharpRaven.Data.SentryRequest"/> has been created. Can be overridden to
            adjust the values of the <paramref name="request"/> before it is sent to Sentry.
            </summary>
            <param name="request">The HTTP request information.</param>
            <returns>
            The <see cref="T:SharpRaven.Data.SentryRequest"/>.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryRequestFactory.CurrentHttpContextProperty">
            <summary>
            Gets or sets the CurrentHttpContextProperty
            </summary>
            <value>
            The current httpcontext property
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryRequestFactory.HttpContext">
            <summary>
            Gets or sets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="T:SharpRaven.Data.SentryStacktrace">
            <summary>
            Represents Sentry's version of an <see cref="T:System.Exception"/>'s stack trace.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryStacktrace.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryStacktrace"/> class.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryStacktrace.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryStacktrace.Frames">
            <summary>
            Gets or sets the <see cref="T:System.Exception"/> frames.
            </summary>
            <value>
            The <see cref="T:System.Exception"/> frames.
            </value>
        </member>
        <member name="T:SharpRaven.Data.SentryUser">
            <summary>
            An interface which describes the authenticated User for a request.
            You should provide at least either an id (a unique identifier for an authenticated user) or ip_address (their IP address).
            </summary>
        </member>
        <member name="M:SharpRaven.Data.SentryUser.#ctor(System.Security.Principal.IPrincipal)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryUser"/> class.
            </summary>
            <param name="principal">The principal.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryUser.#ctor(System.Security.Principal.IIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryUser"/> class.
            </summary>
            <param name="identity">The identity.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryUser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.SentryUser"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:SharpRaven.Data.SentryUser.GetUser(SharpRaven.Data.ISentryUserFactory)">
            <summary>
            Gets the user.
            </summary>
            <returns>
            If an HTTP context is available, an instance of <see cref="T:SharpRaven.Data.SentryUser"/>, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.SentryUser.Email">
            <summary>
            Gets or sets the user's email address.
            </summary>
            <value>
            The user's email address.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryUser.Id">
            <summary>
            Gets or sets the user's unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryUser.IpAddress">
            <summary>
            Gets or sets the user's IP address.
            </summary>
            <value>
            The user's IP address.
            </value>
        </member>
        <member name="P:SharpRaven.Data.SentryUser.Username">
            <summary>
            Gets or sets the user's username.
            </summary>
            <value>
            The user's username.
            </value>
        </member>
        <member name="T:SharpRaven.Dsn">
            <summary>
            The Data Source Name of a given project in Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Dsn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Dsn"/> class.
            </summary>
            <param name="dsn">The Data Source Name.</param>
        </member>
        <member name="M:SharpRaven.Dsn.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:SharpRaven.Dsn.GetPath(System.Uri)">
            <summary>
            Get a path from a Dsn uri
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.Dsn.GetPrivateKey(System.Uri)">
            <summary>
            Get a private key from a Dsn uri.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.Dsn.GetProjectID(System.Uri)">
            <summary>
            Get a project ID from a Dsn uri.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.Dsn.GetPublicKey(System.Uri)">
            <summary>
            Get a public key from a Dsn uri.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="P:SharpRaven.Dsn.Path">
            <summary>
            Sentry path.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.Port">
            <summary>
            The sentry server port.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.PrivateKey">
            <summary>
            Project private key.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.ProjectID">
            <summary>
            Project identification.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.PublicKey">
            <summary>
            Project public key.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.SentryUri">
            <summary>
            Sentry Uri for sending reports.
            </summary>
        </member>
        <member name="P:SharpRaven.Dsn.Uri">
            <summary>
            Absolute Dsn Uri
            </summary>
        </member>
        <member name="T:SharpRaven.Data.JsonPacket">
            <summary>
            Represents the JSON packet that is transmitted to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.JsonPacket"/> class.
            </summary>
            <param name="project">The project.</param>
            <param name="exception">The <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.#ctor(System.String,SharpRaven.Data.SentryEvent)">
            <summary>Initializes a new instance of the <see cref="T:SharpRaven.Data.JsonPacket"/> class.</summary>
            <param name="project">The project.</param>
            <param name="event">The event.</param>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Data.JsonPacket"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:SharpRaven.Data.JsonPacket"/> class from being created.
            </summary>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.ToString(Newtonsoft.Json.Formatting)">
            <summary>
            Converts the <see cref="T:SharpRaven.Data.JsonPacket"/> into a JSON string.
            </summary>
            <param name="formatting">The formatting.</param>
            <returns>
            The <see cref="T:SharpRaven.Data.JsonPacket"/> as a JSON string.
            </returns>
        </member>
        <member name="M:SharpRaven.Data.JsonPacket.ToString">
            <summary>
            Converts the <see cref="T:SharpRaven.Data.JsonPacket"/> into a JSON string.
            </summary>
            <returns>
            The <see cref="T:SharpRaven.Data.JsonPacket"/> as a JSON string.
            </returns>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Culprit">
            <summary>
            Function call which was the primary perpetrator of this event.
            A map or list of tags for this event.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Environment">
            <summary>
            Identifies the operating environment (e.g. production).
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.EventID">
            <summary>
            Hexadecimal string representing a uuid4 value.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Exceptions">
            <summary>
            Gets or sets the exceptions.
            </summary>
            <value>
            The exceptions.
            </value>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Extra">
            <summary>
            An arbitrary mapping of additional metadata to store with the event.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Fingerprint">
            <summary>
            Gets or sets the fingerprint used for custom grouping
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Level">
            <summary>
            The record severity.
            Defaults to error.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Logger">
             <summary>
             The name of the logger which created the record.
             If missing, defaults to the string root.
            
             Ex: "my.logger.name"
             </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Message">
            <summary>
            User-readable representation of this event
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.MessageObject">
            <summary>
            Optional Message with arguments.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Modules">
            <summary>
            A list of relevant modules (libraries) and their versions.
            Automated to report all modules currently loaded in project.
            </summary>
            <value>
            The modules.
            </value>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Platform">
            <summary>
            A string representing the platform the client is submitting from.
            This will be used by the Sentry interface to customize various components in the interface.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Project">
            <summary>
            String value representing the project
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Release">
            <summary>
            Identifies the version of the application.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Request">
            <summary>
            Gets or sets the <see cref="T:SharpRaven.Data.SentryRequest"/> object, containing information about the HTTP request.
            </summary>
            <value>
            The <see cref="T:SharpRaven.Data.SentryRequest"/> object, containing information about the HTTP request.
            </value>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.ServerName">
            <summary>
            Identifies the host client from which the event was recorded.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Tags">
            <summary>
            A map or list of tags for this event.
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.TimeStamp">
            <summary>
            Indicates when the logging record was created (in the Sentry client).
            Defaults to DateTime.UtcNow()
            </summary>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.Breadcrumbs">
            <summary>
            Gets or sets the breadcrumbs <see cref="T:SharpRaven.Data.Breadcrumb"/> class.
            </summary>
            <value>
            The breadcrumbs.
            </value>
        </member>
        <member name="P:SharpRaven.Data.JsonPacket.User">
            <summary>
            Gets or sets the <see cref="T:SharpRaven.Data.SentryUser"/> object, which describes the authenticated User for a request.
            </summary>
            <value>
            The <see cref="T:SharpRaven.Data.SentryUser"/> object, which describes the authenticated User for a request.
            </value>
        </member>
        <member name="T:SharpRaven.IRavenClient">
            <summary>
            Raven client interface.
            </summary>
        </member>
        <member name="M:SharpRaven.IRavenClient.AddTrail(SharpRaven.Data.Breadcrumb)">
            <summary>
            Captures the <see cref="T:SharpRaven.Data.Breadcrumb"/> for tracking.
            </summary>
            <param name="breadcrumb">The <see cref="T:SharpRaven.Data.Breadcrumb"/> to capture.</param>
        </member>
        <member name="M:SharpRaven.IRavenClient.Capture(SharpRaven.Data.SentryEvent)">
            <summary>Captures the specified <paramref name="event"/>.</summary>
            <param name="event">The event to capture.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="event"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.IRavenClient.CaptureException(System.Exception,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Captures the <see cref="T:System.Exception"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="message">The optional message to capture instead of the default <see cref="P:System.Exception.Message"/>.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="exception"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="exception"/> with.</param>
            <param name="fingerprint">The custom fingerprint to identify the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="exception"/>.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="exception"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.IRavenClient.CaptureMessage(SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Captures the message.
            </summary>
            <param name="message">The message to capture.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="message"/>. Default <see cref="F:SharpRaven.Data.ErrorLevel.Info"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="message"/> with.</param>
            <param name="fingerprint">The custom fingerprint to identify the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="message"/>.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="message"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.IRavenClient.RestartTrails">
            <summary>
            Restart the capture of the <see cref="T:SharpRaven.Data.Breadcrumb"/> for tracking.
            </summary>
        </member>
        <member name="M:SharpRaven.IRavenClient.CaptureEvent(System.Exception)">
            <summary>
            Captures the event.
            </summary>
            <param name="e">The <see cref="T:System.Exception"/> to capture.</param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.IRavenClient.CaptureEvent(System.Exception,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Captures the event.
            </summary>
            <param name="e">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="tags">The tags to annotate the captured exception with.</param>
            <returns></returns>
        </member>
        <member name="P:SharpRaven.IRavenClient.BeforeSend">
            <summary>
            Gets or sets the <see cref="T:System.Action"/> to execute to manipulate or extract data from
            the <see cref="T:SharpRaven.Data.Requester"/> object before it is used in the <see cref="M:SharpRaven.RavenClient.Send(SharpRaven.Data.JsonPacket)"/> method.
            </summary>
            <value>
            The <see cref="T:System.Action"/> to execute to manipulate or extract data from the
            <see cref="T:SharpRaven.Data.Requester"/> object before it is used in the <see cref="M:SharpRaven.RavenClient.Send(SharpRaven.Data.JsonPacket)"/> method.
            </value>
        </member>
        <member name="P:SharpRaven.IRavenClient.Compression">
            <summary>
            Enable Gzip Compression?
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.CurrentDsn">
            <summary>
            The Dsn currently being used to log exceptions.
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.Environment">
            <summary>
            The environment (e.g. production)
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.IgnoreBreadcrumbs">
            <summary>
            Not register the <see cref="T:SharpRaven.Data.Breadcrumb"/> for tracking.
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.Logger">
            <summary>
            Logger. Default is "root"
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.LogScrubber">
            <summary>
            Interface for providing a 'log scrubber' that removes
            sensitive information from exceptions sent to sentry.
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.Release">
            <summary>
            Release.
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.Tags">
            <summary>
            Default tags
            </summary>
        </member>
        <member name="P:SharpRaven.IRavenClient.Timeout">
            <summary>
            Gets or sets the timeout value in milliseconds for the <see cref="M:System.Net.HttpWebRequest.GetResponse"/>
            and <see cref="M:System.Net.HttpWebRequest.GetRequestStream"/> methods.
            </summary>
            <value>
            The number of milliseconds to wait before the request times out. The default is 5,000 milliseconds (5 seconds).
            Valid values: a nonnegative integer or <see cref="F:System.Threading.Timeout.Infinite"/>
            </value>
        </member>
        <member name="T:SharpRaven.Logging.Filters.CreditCardFilter">
            <summary>
            The credit card filter.
            </summary>
        </member>
        <member name="T:SharpRaven.Logging.IFilter">
            <summary>
            Interface for providing a 'filter' for log scrubbers.
            Used primarily for the default filter, but can be used
            by others if needed.
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.IFilter.Filter(System.String)">
            <summary>
            Filters the specified input and returns the filtered <see cref="T:System.String"/>.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The filtered <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:SharpRaven.Logging.Filters.CreditCardFilter.Filter(System.String)">
            <summary>
            Filters credit card numbers from the input.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            The <see cref="T:System.String"/> with credit card numbers removed.
            </returns>
        </member>
        <member name="M:SharpRaven.Logging.Filters.CreditCardFilter.IsValidCreditCardNumber(System.String)">
            <summary>
            Validates a credit card number using Luhn algorithm.
            Extremely fast Luhn algorithm implementation, based on 
            pseudo code from Cliff L. Biffle (http://microcoder.livejournal.com/17175.html)
            Copyleft Thomas @ Orb of Knowledge:
            http://orb-of-knowledge.blogspot.com/2009/08/extremely-fast-luhn-function-for-c.html
            </summary>
            <param name="number">
            The credit card number.
            </param>
            <returns>
            True if a valid credit card number; otherwise false.
            </returns>
        </member>
        <member name="T:SharpRaven.Logging.Filters.PhoneNumberFilter">
            <summary>
            An <see cref="T:SharpRaven.Logging.IFilter"/> implementation for masking phone numbers in a logged message
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.Filters.PhoneNumberFilter.#cctor">
            <summary>
            Static initalization of the <see cref="T:SharpRaven.Logging.Filters.PhoneNumberFilter"/> class.
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.Filters.PhoneNumberFilter.Filter(System.String)">
            <summary>
            An <see cref="T:SharpRaven.Logging.IFilter"/> implementation for masking phone numbers in a logged 
            </summary>
        </member>
        <member name="T:SharpRaven.Logging.Filters.SocialSecurityFilter">
            <summary>
            NOT IMPLEMENTED YET
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.Filters.SocialSecurityFilter.Filter(System.String)">
            <summary>
            NOT IMPLEMENTED YET
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:SharpRaven.Logging.IScrubber">
            <summary>
            Interface for plugging into RavenClient to provide methods to filter logs.
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.IScrubber.Scrub(System.String)">
            <summary>
            The main interface for scrubbing a JSON packet,
            called before compression (if enabled)
            </summary>
            <param name="input">The serialized JSON packet is given here.</param>
            <returns>Scrubbed JSON packet.</returns>
        </member>
        <member name="T:SharpRaven.Logging.LogScrubber">
            <summary>
            Scrubs a JSON packet for sensitive information with <see cref="T:SharpRaven.Logging.Filters.CreditCardFilter"/>, <see cref="T:SharpRaven.Logging.Filters.PhoneNumberFilter"/> and <see cref="T:SharpRaven.Logging.Filters.SocialSecurityFilter"/>.
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.LogScrubber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.Logging.LogScrubber"/> class and adds CreditCardFilter and US-style PhoneNumberFilter
            to the filter collection used to scrub the JSON packet. 
            </summary>
        </member>
        <member name="M:SharpRaven.Logging.LogScrubber.Scrub(System.String)">
            <summary>
            The main interface for scrubbing a JSON packet,
            called before compression (if enabled)
            </summary>
            <param name="input">The serialized JSON packet is given here.</param>
            <returns>
            Scrubbed JSON packet.
            </returns>
        </member>
        <member name="P:SharpRaven.Logging.LogScrubber.Filters">
            <summary>
            Gets the list of filters 
            </summary>
            <value>
            The filters.
            </value>
        </member>
        <member name="T:SharpRaven.RavenClient">
            <summary>
            The Raven Client, responsible for capturing exceptions and sending them to Sentry.
            </summary>
        </member>
        <member name="M:SharpRaven.RavenClient.#ctor(SharpRaven.Data.IJsonPacketFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.RavenClient"/> class. Sentry
            Data Source Name will be read from sharpRaven section in your app.config or
            web.config.
            </summary>
            <param name="jsonPacketFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.JsonPacket"/> that will be sent to Sentry.</param>
        </member>
        <member name="M:SharpRaven.RavenClient.#ctor(System.String,SharpRaven.Data.IJsonPacketFactory,SharpRaven.Data.ISentryRequestFactory,SharpRaven.Data.ISentryUserFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.RavenClient"/> class.
            </summary>
            <param name="dsn">The Data Source Name in Sentry.</param>
            <param name="jsonPacketFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.JsonPacket"/> that will be sent to Sentry.</param>
            <param name="sentryRequestFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.SentryRequest"/> that will be sent to Sentry.</param>
            <param name="sentryUserFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.SentryUser"/> that will be sent to Sentry.</param>
        </member>
        <member name="M:SharpRaven.RavenClient.#ctor(SharpRaven.Dsn,SharpRaven.Data.IJsonPacketFactory,SharpRaven.Data.ISentryRequestFactory,SharpRaven.Data.ISentryUserFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpRaven.RavenClient"/> class.
            </summary>
            <param name="dsn">The Data Source Name in Sentry.</param>
            <param name="jsonPacketFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.JsonPacket"/> that will be sent to Sentry.</param>
            <param name="sentryRequestFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.SentryRequest"/> that will be sent to Sentry.</param>
            <param name="sentryUserFactory">The optional factory that will be used to create the <see cref="T:SharpRaven.Data.SentryUser"/> that will be sent to Sentry.</param>
            <exception cref="T:System.ArgumentNullException">dsn</exception>
        </member>
        <member name="M:SharpRaven.RavenClient.AddTrail(SharpRaven.Data.Breadcrumb)">
            <summary>
            Captures the last 100 <see cref="T:SharpRaven.Data.Breadcrumb"/>.
            </summary>
            <param name="breadcrumb">The <see cref="T:SharpRaven.Data.Breadcrumb"/> to capture.</param>
        </member>
        <member name="M:SharpRaven.RavenClient.RestartTrails">
            <summary>
            Restart the capture of the <see cref="T:SharpRaven.Data.Breadcrumb"/> for tracking.
            </summary>
        </member>
        <member name="M:SharpRaven.RavenClient.Capture(SharpRaven.Data.SentryEvent)">
            <summary>Captures the specified <paramref name="event"/>.</summary>
            <param name="event">The event to capture.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="event"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.RavenClient.CaptureEvent(System.Exception)">
            <summary>
            Captures the event.
            </summary>
            <param name="e">The <see cref="T:System.Exception"/> to capture.</param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.RavenClient.CaptureEvent(System.Exception,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Captures the event.
            </summary>
            <param name="e">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="tags">The tags to annotate the captured exception with.</param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.RavenClient.CaptureException(System.Exception,SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Captures the <see cref="T:System.Exception"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to capture.</param>
            <param name="message">The optional message to capture. Default: <see cref="P:System.Exception.Message"/>.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="exception"/>. Default: <see cref="F:SharpRaven.Data.ErrorLevel.Error"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="exception"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="exception"/>.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="exception"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.RavenClient.CaptureMessage(SharpRaven.Data.SentryMessage,SharpRaven.Data.ErrorLevel,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.Object)">
            <summary>
            Captures the message.
            </summary>
            <param name="message">The message to capture.</param>
            <param name="level">The <see cref="T:SharpRaven.Data.ErrorLevel"/> of the captured <paramref name="message"/>. Default <see cref="F:SharpRaven.Data.ErrorLevel.Info"/>.</param>
            <param name="tags">The tags to annotate the captured <paramref name="message"/> with.</param>
            <param name="fingerprint">The custom fingerprint to annotate the captured <paramref name="message"/> with.</param>
            <param name="extra">The extra metadata to send with the captured <paramref name="message"/>.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured <paramref name="message"/>, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="M:SharpRaven.RavenClient.PreparePacket(SharpRaven.Data.JsonPacket)">
            <summary>
            Performs <see cref="T:SharpRaven.Data.JsonPacket"/> post-processing prior to being sent to Sentry.
            </summary>
            <param name="packet">The prepared <see cref="T:SharpRaven.Data.JsonPacket"/> which has cleared the creation pipeline.</param>
            <returns>The <see cref="T:SharpRaven.Data.JsonPacket"/> which should be sent to Sentry.</returns>
        </member>
        <member name="M:SharpRaven.RavenClient.Send(SharpRaven.Data.JsonPacket)">
            <summary>Sends the specified packet to Sentry.</summary>
            <param name="packet">The packet to send.</param>
            <returns>
            The <see cref="P:SharpRaven.Data.JsonPacket.EventID"/> of the successfully captured JSON packet, or <c>null</c> if it fails.
            </returns>
        </member>
        <member name="P:SharpRaven.RavenClient.BeforeSend">
            <summary>
            Gets or sets the <see cref="T:System.Action"/> to execute to manipulate or extract data from
            the <see cref="T:SharpRaven.Data.Requester"/> object before it is used in the <see cref="M:SharpRaven.RavenClient.Send(SharpRaven.Data.JsonPacket)"/> method.
            </summary>
            <value>
            The <see cref="T:System.Action"/> to execute to manipulate or extract data from the
            <see cref="T:SharpRaven.Data.Requester"/> object before it is used in the <see cref="M:SharpRaven.RavenClient.Send(SharpRaven.Data.JsonPacket)"/> method.
            </value>
        </member>
        <member name="P:SharpRaven.RavenClient.ErrorOnCapture">
            <summary>
            Gets or sets the <see cref="T:System.Action"/> to execute if an error occurs when executing
            <see cref="M:SharpRaven.RavenClient.Capture(SharpRaven.Data.SentryEvent)"/>.
            </summary>
            <value>
            The <see cref="T:System.Action"/> to execute if an error occurs when executing <see cref="M:SharpRaven.RavenClient.Capture(SharpRaven.Data.SentryEvent)"/>.
            </value>
        </member>
        <member name="P:SharpRaven.RavenClient.Compression">
            <summary>
            Enable Gzip Compression?
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.CurrentDsn">
            <summary>
            The Dsn currently being used to log exceptions.
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.LogScrubber">
            <summary>
            Interface for providing a 'log scrubber' that removes
            sensitive information from exceptions sent to sentry.
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.Logger">
            <summary>
            The name of the logger. The default logger name is "root".
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.Release">
            <summary>
            The version of the application.
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.Environment">
            <summary>
            The environment (e.g. production)
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.Tags">
            <summary>
            Default tags sent on all events.
            </summary>
        </member>
        <member name="P:SharpRaven.RavenClient.Timeout">
            <summary>
            Gets or sets the timeout value in milliseconds for the HTTP communication with Sentry.
            </summary>
            <value>
            The number of milliseconds to wait before the request times out. The default is 5,000 milliseconds (5 seconds).
            </value>
        </member>
        <member name="P:SharpRaven.RavenClient.IgnoreBreadcrumbs">
            <summary>
            Not register the <see cref="T:SharpRaven.Data.Breadcrumb"/> for tracking.
            </summary>
        </member>
        <member name="T:SharpRaven.Serialization.LowerInvariantStringEnumConverter">
            <summary>
            Converts enum to a <see cref="T:System.String"/>.ToLowerInvariant.
            </summary>
        </member>
        <member name="M:SharpRaven.Serialization.LowerInvariantStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:SharpRaven.Configuration">
            <summary>
            SharpRaven configuration class.
            </summary>
        </member>
        <member name="P:SharpRaven.Configuration.Dsn">
            <summary>
            Gets the &lt;dsn/&gt; configuration element.
            </summary>
            <value>
            The &lt;dsn/&gt; configuration element.
            </value>
        </member>
        <member name="P:SharpRaven.Configuration.Settings">
            <summary>
            Gets the &lt;sharpRaven/&gt; configuration element.
            </summary>
            <value>
            The the &lt;sharpRaven/&gt; configuration element.
            </value>
        </member>
        <member name="T:SharpRaven.Configuration.DsnElement">
            <summary>
            The &lt;dsn/&gt; configuration element.
            </summary>
        </member>
        <member name="P:SharpRaven.Configuration.DsnElement.Value">
            <summary>
            Gets the value of the &lt;dsn/&gt; configuration element.
            </summary>
            <value>
            The value of the &lt;dsn/&gt; configuration element.
            </value>
        </member>
        <member name="T:SharpRaven.Utilities.GzipUtil">
            <summary>
            GZip Utilities.
            </summary>
        </member>
        <member name="M:SharpRaven.Utilities.GzipUtil.Write(System.String,System.IO.Stream)">
            <summary>
            Compress a JSON string with base-64 encoded gzip compressed string.
            </summary>
            <param name="json">The JSON to write.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:SharpRaven.Utilities.PacketBuilder">
            <summary>
            Utility class for building 
            </summary>
        </member>
        <member name="M:SharpRaven.Utilities.PacketBuilder.#cctor">
            <summary>
            Initializes the <see cref="T:SharpRaven.Utilities.PacketBuilder"/> class.
            </summary>
        </member>
        <member name="M:SharpRaven.Utilities.PacketBuilder.CreateAuthenticationHeader(SharpRaven.Dsn)">
            <summary>
            Creates the authentication header base on the provided <see cref="T:SharpRaven.Dsn"/>.
            </summary>
            <param name="dsn">The DSN.</param>
            <returns>
            The authentication header.
            </returns>
        </member>
        <member name="P:SharpRaven.Utilities.PacketBuilder.UserAgent">
            <summary>
            Gets the user agent string for Sentry.
            </summary>
            <value>
            The user agent string for Sentry.
            </value>
        </member>
        <member name="T:SharpRaven.Utilities.SystemUtil">
            <summary>
            Utility class for retreiving system information.
            </summary>
        </member>
        <member name="M:SharpRaven.Utilities.SystemUtil.IsNullOrWhiteSpace(System.String)">
            <summary>
            Checks if a string is null or white space
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:SharpRaven.Utilities.SystemUtil.GetModules">
            <summary>
            Return all loaded modules.
            </summary>
            <returns>
            All loaded modules.
            </returns>
        </member>
        <member name="M:SharpRaven.Utilities.SystemUtil.WriteError(System.Exception)">
            <summary>
            Writes the <paramref name="exception"/> to the <see cref="T:System.Console"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to write to the <see cref="T:System.Console"/>.</param>
        </member>
        <member name="M:SharpRaven.Utilities.SystemUtil.WriteError(System.String)">
            <summary>
            Writes the <paramref name="error"/> to the <see cref="T:System.Console"/>.
            </summary>
            <param name="error">The error to write to the <see cref="T:System.Console"/>.</param>
        </member>
        <member name="M:SharpRaven.Utilities.SystemUtil.WriteError(System.String,System.String)">
            <summary>
            Writes the <paramref name="description"/> and <paramref name="multilineData"/> to the <see cref="T:System.Console"/>.
            </summary>
            <param name="description">The text describing the <paramref name="multilineData"/>.</param>
            <param name="multilineData">The multi-line data to write to the <see cref="T:System.Console"/>.</param>
        </member>
    </members>
</doc>
